\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{CREATE} \PYG{k}{TABLE} \PYG{n}{employee} \PYG{p}{(}
  \PYG{n}{emp\PYGZus{}id} \PYG{n+nb}{INT} \PYG{k}{PRIMARY} \PYG{k}{KEY}\PYG{p}{,}
  \PYG{n}{first\PYGZus{}name} \PYG{n+nb}{VARCHAR}\PYG{p}{(}\PYG{l+m+mi}{40}\PYG{p}{),}
  \PYG{n}{last\PYGZus{}name} \PYG{n+nb}{VARCHAR}\PYG{p}{(}\PYG{l+m+mi}{40}\PYG{p}{),}
  \PYG{n}{birth\PYGZus{}day} \PYG{n+nb}{DATE}\PYG{p}{,}
  \PYG{n}{sex} \PYG{n+nb}{VARCHAR}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{),}
  \PYG{n}{salary} \PYG{n+nb}{INT}\PYG{p}{,}
  \PYG{n}{super\PYGZus{}id} \PYG{n+nb}{INT}\PYG{p}{,}
  \PYG{n}{branch\PYGZus{}id} \PYG{n+nb}{INT}
\PYG{p}{);}

\PYG{k}{CREATE} \PYG{k}{TABLE} \PYG{n}{branch} \PYG{p}{(}
  \PYG{n}{branch\PYGZus{}id} \PYG{n+nb}{INT} \PYG{k}{PRIMARY} \PYG{k}{KEY}\PYG{p}{,}
  \PYG{n}{branch\PYGZus{}name} \PYG{n+nb}{VARCHAR}\PYG{p}{(}\PYG{l+m+mi}{40}\PYG{p}{),}
  \PYG{n}{mgr\PYGZus{}id} \PYG{n+nb}{INT}\PYG{p}{,}
  \PYG{n}{mgr\PYGZus{}start\PYGZus{}date} \PYG{n+nb}{DATE}\PYG{p}{,}
  \PYG{k}{FOREIGN} \PYG{k}{KEY}\PYG{p}{(}\PYG{n}{mgr\PYGZus{}id}\PYG{p}{)} \PYG{k}{REFERENCES} \PYG{n}{employee}\PYG{p}{(}\PYG{n}{emp\PYGZus{}id}\PYG{p}{)} \PYG{k}{ON} \PYG{k}{DELETE} \PYG{k}{SET} \PYG{k}{NULL}
  \PYG{c+c1}{\PYGZhy{}\PYGZhy{} example of multiple foreign key:}
  \PYG{c+c1}{\PYGZhy{}\PYGZhy{} foreign key (course\PYGZus{}id, sec\PYGZus{}id, semester) references section (course\PYGZus{}id, sec\PYGZus{}id, semester) on delete cascade}
  \PYG{c+c1}{\PYGZhy{}\PYGZhy{} foreign key (ID) references student (ID) on delete cascade}
\PYG{p}{);}

\PYG{k}{ALTER} \PYG{k}{TABLE} \PYG{n}{employee}
\PYG{k}{ADD} \PYG{k}{FOREIGN} \PYG{k}{KEY}\PYG{p}{(}\PYG{n}{branch\PYGZus{}id}\PYG{p}{)}
\PYG{k}{REFERENCES} \PYG{n}{branch}\PYG{p}{(}\PYG{n}{branch\PYGZus{}id}\PYG{p}{)}
\PYG{k}{ON} \PYG{k}{DELETE} \PYG{k}{SET} \PYG{k}{NULL}\PYG{p}{;}

\PYG{k}{ALTER} \PYG{k}{TABLE} \PYG{n}{employee}
\PYG{k}{ADD} \PYG{k}{FOREIGN} \PYG{k}{KEY}\PYG{p}{(}\PYG{n}{super\PYGZus{}id}\PYG{p}{)}
\PYG{k}{REFERENCES} \PYG{n}{employee}\PYG{p}{(}\PYG{n}{emp\PYGZus{}id}\PYG{p}{)}
\PYG{k}{ON} \PYG{k}{DELETE} \PYG{k}{SET} \PYG{k}{NULL}\PYG{p}{;}

\PYG{k}{CREATE} \PYG{k}{TABLE} \PYG{n}{client} \PYG{p}{(}
  \PYG{n}{client\PYGZus{}id} \PYG{n+nb}{INT} \PYG{k}{PRIMARY} \PYG{k}{KEY}\PYG{p}{,}
  \PYG{n}{client\PYGZus{}name} \PYG{n+nb}{VARCHAR}\PYG{p}{(}\PYG{l+m+mi}{40}\PYG{p}{),}
  \PYG{n}{branch\PYGZus{}id} \PYG{n+nb}{INT}\PYG{p}{,}
  \PYG{k}{FOREIGN} \PYG{k}{KEY}\PYG{p}{(}\PYG{n}{branch\PYGZus{}id}\PYG{p}{)} \PYG{k}{REFERENCES} \PYG{n}{branch}\PYG{p}{(}\PYG{n}{branch\PYGZus{}id}\PYG{p}{)} \PYG{k}{ON} \PYG{k}{DELETE} \PYG{k}{SET} \PYG{k}{NULL}
\PYG{p}{);}

\PYG{k}{CREATE} \PYG{k}{TABLE} \PYG{n}{works\PYGZus{}with} \PYG{p}{(}
  \PYG{n}{emp\PYGZus{}id} \PYG{n+nb}{INT}\PYG{p}{,}
  \PYG{n}{client\PYGZus{}id} \PYG{n+nb}{INT}\PYG{p}{,}
  \PYG{n}{total\PYGZus{}sales} \PYG{n+nb}{INT}\PYG{p}{,}
  \PYG{k}{PRIMARY} \PYG{k}{KEY}\PYG{p}{(}\PYG{n}{emp\PYGZus{}id}\PYG{p}{,} \PYG{n}{client\PYGZus{}id}\PYG{p}{),}  \PYG{c+c1}{\PYGZhy{}\PYGZhy{} in this way we can set multiple primary keys.}
  \PYG{k}{FOREIGN} \PYG{k}{KEY}\PYG{p}{(}\PYG{n}{emp\PYGZus{}id}\PYG{p}{)} \PYG{k}{REFERENCES} \PYG{n}{employee}\PYG{p}{(}\PYG{n}{emp\PYGZus{}id}\PYG{p}{)} \PYG{k}{ON} \PYG{k}{DELETE} \PYG{k}{CASCADE}\PYG{p}{,}
  \PYG{k}{FOREIGN} \PYG{k}{KEY}\PYG{p}{(}\PYG{n}{client\PYGZus{}id}\PYG{p}{)} \PYG{k}{REFERENCES} \PYG{n}{client}\PYG{p}{(}\PYG{n}{client\PYGZus{}id}\PYG{p}{)} \PYG{k}{ON} \PYG{k}{DELETE} \PYG{k}{CASCADE}
\PYG{p}{);}

\PYG{k}{CREATE} \PYG{k}{TABLE} \PYG{n}{branch\PYGZus{}supplier} \PYG{p}{(}
  \PYG{n}{branch\PYGZus{}id} \PYG{n+nb}{INT}\PYG{p}{,}
  \PYG{n}{supplier\PYGZus{}name} \PYG{n+nb}{VARCHAR}\PYG{p}{(}\PYG{l+m+mi}{40}\PYG{p}{),}
  \PYG{n}{supply\PYGZus{}type} \PYG{n+nb}{VARCHAR}\PYG{p}{(}\PYG{l+m+mi}{40}\PYG{p}{),}
  \PYG{k}{PRIMARY} \PYG{k}{KEY}\PYG{p}{(}\PYG{n}{branch\PYGZus{}id}\PYG{p}{,} \PYG{n}{supplier\PYGZus{}name}\PYG{p}{),}
  \PYG{k}{FOREIGN} \PYG{k}{KEY}\PYG{p}{(}\PYG{n}{branch\PYGZus{}id}\PYG{p}{)} \PYG{k}{REFERENCES} \PYG{n}{branch}\PYG{p}{(}\PYG{n}{branch\PYGZus{}id}\PYG{p}{)} \PYG{k}{ON} \PYG{k}{DELETE} \PYG{k}{CASCADE}
\PYG{p}{);}


\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Corporate}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{employee} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{100}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}David\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Wallace\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}1967\PYGZhy{}11\PYGZhy{}17\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}M\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{250000}\PYG{p}{,} \PYG{k}{NULL}\PYG{p}{,} \PYG{k}{NULL}\PYG{p}{);}

\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{branch} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Corporate\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{100}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}2006\PYGZhy{}02\PYGZhy{}09\PYGZsq{}}\PYG{p}{);}

\PYG{k}{UPDATE} \PYG{n}{employee}
\PYG{k}{SET} \PYG{n}{branch\PYGZus{}id} \PYG{o}{=} \PYG{l+m+mi}{1}
\PYG{k}{WHERE} \PYG{n}{emp\PYGZus{}id} \PYG{o}{=} \PYG{l+m+mi}{100}\PYG{p}{;}

\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{employee} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{101}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Jan\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Levinson\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}1961\PYGZhy{}05\PYGZhy{}11\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}F\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{110000}\PYG{p}{,} \PYG{l+m+mi}{100}\PYG{p}{,} \PYG{l+m+mi}{1}\PYG{p}{);}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Scranton}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{employee} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{102}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Michael\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Scott\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}1964\PYGZhy{}03\PYGZhy{}15\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}M\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{75000}\PYG{p}{,} \PYG{l+m+mi}{100}\PYG{p}{,} \PYG{k}{NULL}\PYG{p}{);}

\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{branch} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{2}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Scranton\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{102}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}1992\PYGZhy{}04\PYGZhy{}06\PYGZsq{}}\PYG{p}{);}

\PYG{k}{UPDATE} \PYG{n}{employee}
\PYG{k}{SET} \PYG{n}{branch\PYGZus{}id} \PYG{o}{=} \PYG{l+m+mi}{2}
\PYG{k}{WHERE} \PYG{n}{emp\PYGZus{}id} \PYG{o}{=} \PYG{l+m+mi}{102}\PYG{p}{;}

\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{employee} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{103}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Angela\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Martin\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}1971\PYGZhy{}06\PYGZhy{}25\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}F\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{63000}\PYG{p}{,} \PYG{l+m+mi}{102}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{employee} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{104}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Kelly\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Kapoor\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}1980\PYGZhy{}02\PYGZhy{}05\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}F\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{55000}\PYG{p}{,} \PYG{l+m+mi}{102}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{employee} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{105}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Stanley\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Hudson\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}1958\PYGZhy{}02\PYGZhy{}19\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}M\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{69000}\PYG{p}{,} \PYG{l+m+mi}{102}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{);}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Stamford}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{employee} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{106}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Josh\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Porter\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}1969\PYGZhy{}09\PYGZhy{}05\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}M\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{78000}\PYG{p}{,} \PYG{l+m+mi}{100}\PYG{p}{,} \PYG{k}{NULL}\PYG{p}{);}

\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{branch} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Stamford\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{106}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}1998\PYGZhy{}02\PYGZhy{}13\PYGZsq{}}\PYG{p}{);}

\PYG{k}{UPDATE} \PYG{n}{employee}
\PYG{k}{SET} \PYG{n}{branch\PYGZus{}id} \PYG{o}{=} \PYG{l+m+mi}{3}
\PYG{k}{WHERE} \PYG{n}{emp\PYGZus{}id} \PYG{o}{=} \PYG{l+m+mi}{106}\PYG{p}{;}

\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{employee} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{107}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Andy\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Bernard\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}1973\PYGZhy{}07\PYGZhy{}22\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}M\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{65000}\PYG{p}{,} \PYG{l+m+mi}{106}\PYG{p}{,} \PYG{l+m+mi}{3}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{employee} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{108}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Jim\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Halpert\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}1978\PYGZhy{}10\PYGZhy{}01\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}M\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{71000}\PYG{p}{,} \PYG{l+m+mi}{106}\PYG{p}{,} \PYG{l+m+mi}{3}\PYG{p}{);}


\PYG{c+c1}{\PYGZhy{}\PYGZhy{} BRANCH SUPPLIER}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{branch\PYGZus{}supplier} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{2}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Hammer Mill\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Paper\PYGZsq{}}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{branch\PYGZus{}supplier} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{2}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Uni\PYGZhy{}ball\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Writing Utensils\PYGZsq{}}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{branch\PYGZus{}supplier} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Patriot Paper\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Paper\PYGZsq{}}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{branch\PYGZus{}supplier} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{2}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}J.T. Forms \PYGZam{} Labels\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Custom Forms\PYGZsq{}}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{branch\PYGZus{}supplier} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Uni\PYGZhy{}ball\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Writing Utensils\PYGZsq{}}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{branch\PYGZus{}supplier} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Hammer Mill\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Paper\PYGZsq{}}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{branch\PYGZus{}supplier} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Stamford Lables\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Custom Forms\PYGZsq{}}\PYG{p}{);}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} CLIENT}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{client} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{400}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Dunmore Highschool\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{client} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{401}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Lackawana Country\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{client} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{402}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}FedEx\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{3}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{client} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{403}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}John Daly Law, LLC\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{3}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{client} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{404}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Scranton Whitepages\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{client} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{405}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Times Newspaper\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{3}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{client} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{406}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}FedEx\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{);}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} WORKS\PYGZus{}WITH}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{works\PYGZus{}with} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{105}\PYG{p}{,} \PYG{l+m+mi}{400}\PYG{p}{,} \PYG{l+m+mi}{55000}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{works\PYGZus{}with} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{102}\PYG{p}{,} \PYG{l+m+mi}{401}\PYG{p}{,} \PYG{l+m+mi}{267000}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{works\PYGZus{}with} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{108}\PYG{p}{,} \PYG{l+m+mi}{402}\PYG{p}{,} \PYG{l+m+mi}{22500}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{works\PYGZus{}with} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{107}\PYG{p}{,} \PYG{l+m+mi}{403}\PYG{p}{,} \PYG{l+m+mi}{5000}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{works\PYGZus{}with} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{108}\PYG{p}{,} \PYG{l+m+mi}{403}\PYG{p}{,} \PYG{l+m+mi}{12000}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{works\PYGZus{}with} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{105}\PYG{p}{,} \PYG{l+m+mi}{404}\PYG{p}{,} \PYG{l+m+mi}{33000}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{works\PYGZus{}with} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{107}\PYG{p}{,} \PYG{l+m+mi}{405}\PYG{p}{,} \PYG{l+m+mi}{26000}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{works\PYGZus{}with} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{102}\PYG{p}{,} \PYG{l+m+mi}{406}\PYG{p}{,} \PYG{l+m+mi}{15000}\PYG{p}{);}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{works\PYGZus{}with} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{105}\PYG{p}{,} \PYG{l+m+mi}{406}\PYG{p}{,} \PYG{l+m+mi}{130000}\PYG{p}{);}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find out all the different genders}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} SQL allows duplication in query results.}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} can use distinct to force elimination.}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} if we would have used select sex, then it would have shown all rows under attribute sex under relation employee.}
\PYG{k}{SELECT} \PYG{k}{DISTINCT} \PYG{n}{sex}
\PYG{k}{FROM} \PYG{n}{employee}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find the total number of instructors who teach a course in the Spring 2010}
\PYG{n}{semester}
\PYG{k}{select} \PYG{k}{count} \PYG{p}{(}\PYG{k}{distinct} \PYG{n}{ID}\PYG{p}{)}
\PYG{k}{from} \PYG{n}{teaches}
\PYG{k}{where} \PYG{n}{semester} \PYG{o}{=} \PYG{err}{’}\PYG{n}{Spring}\PYG{err}{’} \PYG{k}{and} \PYG{k}{year} \PYG{o}{=} \PYG{l+m+mi}{2010}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} find the no. of tuples in course relation}
\PYG{k}{select} \PYG{k}{count}\PYG{p}{(}\PYG{o}{*}\PYG{p}{)} \PYG{k}{from} \PYG{n}{course}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find names of instructors with salary greater than that of some (at least one)}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} instructor in the Biology department.}
\PYG{k}{select} \PYG{k}{distinct} \PYG{n}{T}\PYG{p}{.}\PYG{n}{name}
\PYG{k}{from} \PYG{n}{instructor} \PYG{k}{as} \PYG{n}{T}\PYG{p}{,} \PYG{n}{instructor} \PYG{k}{as} \PYG{n}{S}
\PYG{k}{where} \PYG{n}{T}\PYG{p}{.}\PYG{n}{salary} \PYG{o}{\PYGZgt{}} \PYG{n}{S}\PYG{p}{.}\PYG{n}{salary} \PYG{k}{and} \PYG{n}{S}\PYG{p}{.}\PYG{n}{dept} \PYG{n}{name} \PYG{o}{=} \PYG{err}{’}\PYG{n}{Biology}\PYG{err}{’}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} same query using some clause}

\PYG{k}{select} \PYG{n}{name}
\PYG{k}{from} \PYG{n}{instructor}
\PYG{k}{where} \PYG{n}{salary} \PYG{o}{\PYGZgt{}} \PYG{k}{some} \PYG{p}{(}\PYG{k}{select} \PYG{n}{salary}
\PYG{k}{from} \PYG{n}{instructor}
\PYG{k}{where} \PYG{n}{dept} \PYG{n}{name} \PYG{o}{=} \PYG{err}{’}\PYG{n}{Biology}\PYG{err}{’}\PYG{p}{);}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find all employee\PYGZsq{}s id\PYGZsq{}s and names who were born after 1969}
\PYG{k}{SELECT} \PYG{n}{emp\PYGZus{}id}\PYG{p}{,} \PYG{n}{first\PYGZus{}name}\PYG{p}{,} \PYG{n}{last\PYGZus{}name}
\PYG{k}{FROM} \PYG{n}{employee}
\PYG{k}{WHERE} \PYG{n}{birth\PYGZus{}day} \PYG{o}{\PYGZgt{}=} \PYG{l+m+mi}{1970}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{01}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{01}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find all employees born between 1970 and 1975}
\PYG{k}{SELECT} \PYG{o}{*}
\PYG{k}{FROM} \PYG{n}{employee}
\PYG{k}{WHERE} \PYG{n}{birth\PYGZus{}day} \PYG{k}{BETWEEN} \PYG{l+s+s1}{\PYGZsq{}1970\PYGZhy{}01\PYGZhy{}01\PYGZsq{}} \PYG{k}{AND} \PYG{l+s+s1}{\PYGZsq{}1975\PYGZhy{}01\PYGZhy{}01\PYGZsq{}}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Functions}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find the number of employees}
\PYG{k}{SELECT} \PYG{k}{COUNT}\PYG{p}{(}\PYG{n}{super\PYGZus{}id}\PYG{p}{)}
\PYG{k}{FROM} \PYG{n}{employee}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find the average of all employee\PYGZsq{}s salaries}
\PYG{k}{SELECT} \PYG{k}{AVG}\PYG{p}{(}\PYG{n}{salary}\PYG{p}{)}
\PYG{k}{FROM} \PYG{n}{employee}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find the names and average salaries of all departments whose average salary is}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} greater than 42000}

\PYG{k}{select} \PYG{n}{dept\PYGZus{}name}\PYG{p}{,} \PYG{k}{avg} \PYG{p}{(}\PYG{n}{salary}\PYG{p}{)}
\PYG{k}{from} \PYG{n}{instructor}
\PYG{k}{group} \PYG{k}{by} \PYG{n}{dept\PYGZus{}name}
\PYG{k}{having} \PYG{k}{avg} \PYG{p}{(}\PYG{n}{salary}\PYG{p}{)} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{42000}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} predicates in the having clause are applied after the}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} formation of groups whereas predicates in the where}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} clause are applied before forming groups}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Delete all instructors whose salary is less than the average salary of instructors}

\PYG{k}{delete} \PYG{k}{from} \PYG{n}{instructor}
\PYG{k}{where} \PYG{n}{salary} \PYG{o}{\PYGZlt{}} \PYG{p}{(}\PYG{k}{select} \PYG{k}{avg} \PYG{p}{(}\PYG{n}{salary}\PYG{p}{)}
\PYG{k}{from} \PYG{n}{instructor}\PYG{p}{);}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Problem: as we delete tuples from deposit, the average salary}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} changes but its not an issue with mysql/mariadb.}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find the sum of all employee\PYGZsq{}s salaries}
\PYG{k}{SELECT} \PYG{k}{SUM}\PYG{p}{(}\PYG{n}{salary}\PYG{p}{)}
\PYG{k}{FROM} \PYG{n}{employee}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Aggregation.}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find out how many males and females there are}
\PYG{k}{SELECT} \PYG{k}{COUNT}\PYG{p}{(}\PYG{n}{sex}\PYG{p}{),} \PYG{n}{sex}  \PYG{c+c1}{\PYGZhy{}\PYGZhy{} now we have two columns, viz, COUNT(sex) and sex.}
\PYG{k}{FROM} \PYG{n}{employee}
\PYG{k}{GROUP} \PYG{k}{BY} \PYG{n}{sex}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find the total sales of each salesman}
\PYG{k}{SELECT} \PYG{k}{SUM}\PYG{p}{(}\PYG{n}{total\PYGZus{}sales}\PYG{p}{),} \PYG{n}{emp\PYGZus{}id}
\PYG{k}{FROM} \PYG{n}{works\PYGZus{}with}
\PYG{k}{GROUP} \PYG{k}{BY} \PYG{n}{emp\PYGZus{}id}\PYG{p}{;}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} IMP NOTE: sum does not avoid null values, null + something is always null so better check for null values. Actually result of any arithmetic expression involving null is null.}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Need to confirm the above point as in slides it is mentioned that all aggregate operations except count (*) ignore tuples will null values on the aggregate attributes.}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} And according to slides, if the collection has only null values then}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} • count returns 0}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} • count(*) return number of rows with null values}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} • all other aggregates return null}

\PYG{k}{select} \PYG{k}{sum}\PYG{p}{(}\PYG{n}{tot\PYGZus{}cred}\PYG{p}{)} \PYG{k}{from} \PYG{n}{student} \PYG{k}{where} \PYG{n}{tot\PYGZus{}cred} \PYG{k}{is} \PYG{k}{not} \PYG{k}{null}\PYG{p}{;}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} if we want to check for null we could have written \PYGZdq{}is null\PYGZdq{} instead of \PYGZdq{}is not null\PYGZdq{}.}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find the total amount of money spent by each client}
\PYG{k}{SELECT} \PYG{k}{SUM}\PYG{p}{(}\PYG{n}{total\PYGZus{}sales}\PYG{p}{),} \PYG{n}{client\PYGZus{}id}
\PYG{k}{FROM} \PYG{n}{works\PYGZus{}with}
\PYG{k}{GROUP} \PYG{k}{BY} \PYG{n}{client\PYGZus{}id}\PYG{p}{;}

\PYG{k}{select} \PYG{n}{dept\PYGZus{}name} \PYG{k}{from} \PYG{n}{department}\PYG{p}{,} \PYG{p}{(}\PYG{k}{select} \PYG{k}{max}\PYG{p}{(}\PYG{n}{budget}\PYG{p}{)} \PYG{k}{as} \PYG{n}{MX} \PYG{k}{from} \PYG{n}{department}\PYG{p}{)} \PYG{k}{as} \PYG{n}{T} \PYG{k}{where} \PYG{n}{budget} \PYG{o}{=} \PYG{n}{T}\PYG{p}{.}\PYG{n}{MX}\PYG{p}{;}

\PYG{k}{select} \PYG{n}{dept\PYGZus{}name}\PYG{p}{,} \PYG{k}{max}\PYG{p}{(}\PYG{n}{AG}\PYG{p}{)} \PYG{k}{from} \PYG{p}{(}\PYG{k}{select} \PYG{n}{dept\PYGZus{}name}\PYG{p}{,} \PYG{k}{avg}\PYG{p}{(}\PYG{n}{salary}\PYG{p}{)} \PYG{k}{as} \PYG{n}{AG} \PYG{k}{from} \PYG{n}{instructor} \PYG{k}{group} \PYG{k}{by} \PYG{n}{dept\PYGZus{}name}\PYG{p}{)} \PYG{k}{as} \PYG{n}{M}\PYG{p}{;}

\PYG{k}{select} \PYG{n}{name}\PYG{p}{,} \PYG{n}{salary}\PYG{p}{,} \PYG{n}{dept\PYGZus{}name} \PYG{k}{from} \PYG{n}{instructor} \PYG{k}{where} \PYG{n}{salary} \PYG{o}{\PYGZgt{}} \PYG{k}{all} \PYG{p}{(}\PYG{k}{select} \PYG{n}{salary} \PYG{k}{from} \PYG{n}{instructor} \PYG{k}{where} \PYG{n}{dept\PYGZus{}name} \PYG{k}{in} \PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Biology\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}History\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Finance\PYGZsq{}}\PYG{p}{));}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Wildcards}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZpc{} = any \PYGZsh{} characters, \PYGZus{} = one character}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find any employee born on the 10th day of the month}
\PYG{k}{SELECT} \PYG{o}{*}
\PYG{k}{FROM} \PYG{n}{employee}
\PYG{k}{WHERE} \PYG{n}{birth\PYGZus{}day} \PYG{k}{LIKE} \PYG{l+s+s1}{\PYGZsq{}\PYGZus{}\PYGZus{}\PYGZus{}\PYGZus{}\PYGZus{}10\PYGZpc{}\PYGZsq{}}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Match the string \PYGZsq{}100\PYGZpc{}\PYGZsq{}}
\PYG{k}{like} \PYG{l+s+s1}{\PYGZsq{}100 \PYGZbs{}\PYGZpc{}\PYGZsq{}} \PYG{k}{escape} \PYG{l+s+s1}{\PYGZsq{}\PYGZbs{}\PYGZsq{}}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} in above we use backslash (\PYGZbs{}) as the escape character.}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find any clients who are schools}
\PYG{k}{SELECT} \PYG{o}{*}
\PYG{k}{FROM} \PYG{n}{client}
\PYG{k}{WHERE} \PYG{n}{client\PYGZus{}name} \PYG{k}{LIKE} \PYG{l+s+s1}{\PYGZsq{}\PYGZpc{}Highschool\PYGZpc{}\PYGZsq{}}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Union}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find a list of all clients \PYGZam{} branch suppliers\PYGZsq{} names}
\PYG{k}{SELECT} \PYG{n}{client}\PYG{p}{.}\PYG{n}{client\PYGZus{}name} \PYG{k}{AS} \PYG{n}{Non}\PYG{o}{\PYGZhy{}}\PYG{n}{Employee\PYGZus{}Entities}\PYG{p}{,} \PYG{n}{client}\PYG{p}{.}\PYG{n}{branch\PYGZus{}id} \PYG{k}{AS} \PYG{n}{Branch\PYGZus{}ID}
\PYG{k}{FROM} \PYG{n}{client}
\PYG{k}{UNION} \PYG{c+c1}{\PYGZhy{}\PYGZhy{} both above and below thing should have same number of columns and same data type respectively}
\PYG{k}{SELECT} \PYG{n}{branch\PYGZus{}supplier}\PYG{p}{.}\PYG{n}{supplier\PYGZus{}name}\PYG{p}{,} \PYG{n}{branch\PYGZus{}supplier}\PYG{p}{.}\PYG{n}{branch\PYGZus{}id}
\PYG{k}{FROM} \PYG{n}{branch\PYGZus{}supplier}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Just like union with same rules we have INTERSECT and EXCEPT and each of them automatically eliminates duplicates that is it inherently assumes DISTINCT. To retain all duplicates use the corresponding multiset versions union all, intersect all, except all (in maria db all is not supported with intersect).}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Suppose a tuple occurs m times in r and n times in s, then, it occurs:}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} • m + n times in r union all s}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} • min(m,n) times in r intersect all s}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} • max(0, m – n) times in r except all s}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Exist and not exist}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} exists r iff r != phi}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} not exists r iff r == phi}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Yet another way of specifying the query “Find all courses taught in both the Fall 2009 semester and in the Spring 2010 semester”}

\PYG{k}{select} \PYG{n}{course\PYGZus{}id}
\PYG{k}{from} \PYG{n}{section} \PYG{k}{as} \PYG{n}{S}
\PYG{k}{where} \PYG{n}{semester} \PYG{o}{=} \PYG{err}{’}\PYG{n}{Fall}\PYG{err}{’} \PYG{k}{and} \PYG{k}{year} \PYG{o}{=} \PYG{l+m+mi}{2009} \PYG{k}{and}
\PYG{k}{exists} \PYG{p}{(}\PYG{k}{select} \PYG{o}{*}
\PYG{k}{from} \PYG{n}{section} \PYG{k}{as} \PYG{n}{T}
\PYG{k}{where} \PYG{n}{semester} \PYG{o}{=} \PYG{err}{’}\PYG{n}{Spring}\PYG{err}{’} \PYG{k}{and} \PYG{k}{year}\PYG{o}{=} \PYG{l+m+mi}{2010}
\PYG{k}{and} \PYG{n}{S}\PYG{p}{.}\PYG{n}{course\PYGZus{}id} \PYG{o}{=} \PYG{n}{T}\PYG{p}{.}\PYG{n}{course\PYGZus{}id}\PYG{p}{);}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find all students who have taken all courses offered in the Biology department}

\PYG{k}{select} \PYG{k}{distinct} \PYG{n}{S}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{,} \PYG{n}{S}\PYG{p}{.}\PYG{n}{name}
\PYG{k}{from} \PYG{n}{student} \PYG{k}{as} \PYG{n}{S}
\PYG{k}{where} \PYG{k}{not} \PYG{k}{exists} \PYG{p}{(} \PYG{p}{(}\PYG{k}{select} \PYG{n}{course\PYGZus{}id}
\PYG{k}{from} \PYG{n}{course}
\PYG{k}{where} \PYG{n}{dept\PYGZus{}name} \PYG{o}{=} \PYG{err}{’}\PYG{n}{Biology}\PYG{err}{’}\PYG{p}{)}
\PYG{k}{except}
\PYG{p}{(}\PYG{k}{select} \PYG{n}{T}\PYG{p}{.}\PYG{n}{course\PYGZus{}id}
\PYG{k}{from} \PYG{n}{takes} \PYG{k}{as} \PYG{n}{T}
\PYG{k}{where} \PYG{n}{S}\PYG{p}{.}\PYG{n}{ID} \PYG{o}{=} \PYG{n}{T}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{));}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} The unique construct tests whether a subquery has any duplicate tuples in its}
\PYG{k}{result}\PYG{p}{.}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} The unique construct evaluates to “true” if a given subquery contains no duplicates.}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find all courses that were offered at most once in 2009}
\PYG{k}{select} \PYG{n}{T}\PYG{p}{.}\PYG{n}{course\PYGZus{}id}
\PYG{k}{from} \PYG{n}{course} \PYG{k}{as} \PYG{n}{T}
\PYG{k}{where} \PYG{k}{unique} \PYG{p}{(}\PYG{k}{select} \PYG{n}{R}\PYG{p}{.}\PYG{n}{course\PYGZus{}id}
\PYG{k}{from} \PYG{n}{section} \PYG{k}{as} \PYG{n}{R}
\PYG{k}{where} \PYG{n}{T}\PYG{p}{.}\PYG{n}{course\PYGZus{}id}\PYG{o}{=} \PYG{n}{R}\PYG{p}{.}\PYG{n}{course\PYGZus{}id}
\PYG{k}{and} \PYG{n}{R}\PYG{p}{.}\PYG{k}{year} \PYG{o}{=} \PYG{l+m+mi}{2009}\PYG{p}{);}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} With}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} The with clause provides a way of defining a temporary relation whose definition is}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} available only to the query in which the with clause occurs.}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find all departments with the maximum budget}

\PYG{k}{with} \PYG{n}{max\PYGZus{}budget} \PYG{p}{(}\PYG{n}{value}\PYG{p}{)} \PYG{k}{as}
\PYG{p}{(}\PYG{k}{select} \PYG{k}{max}\PYG{p}{(}\PYG{n}{budget}\PYG{p}{)}
\PYG{k}{from} \PYG{n}{department}\PYG{p}{)}
\PYG{k}{select} \PYG{n}{department}\PYG{p}{.}\PYG{n}{name}
\PYG{k}{from} \PYG{n}{department}\PYG{p}{,} \PYG{n}{max\PYGZus{}budget}
\PYG{k}{where} \PYG{n}{department}\PYG{p}{.}\PYG{n}{budget} \PYG{o}{=} \PYG{n}{max\PYGZus{}budget}\PYG{p}{.}\PYG{n}{value}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find all departments where the total salary is greater than the average}
\PYG{k}{of} \PYG{n}{the} \PYG{n}{total} \PYG{n}{salary} \PYG{k}{at} \PYG{k}{all} \PYG{n}{departments}

\PYG{k}{with} \PYG{n}{dept} \PYG{n}{\PYGZus{}total} \PYG{p}{(}\PYG{n}{dept\PYGZus{}name}\PYG{p}{,} \PYG{n}{value}\PYG{p}{)} \PYG{k}{as}
\PYG{p}{(}\PYG{k}{select} \PYG{n}{dept\PYGZus{}name}\PYG{p}{,} \PYG{k}{sum}\PYG{p}{(}\PYG{n}{salary}\PYG{p}{)}
\PYG{k}{from} \PYG{n}{instructor}
\PYG{k}{group} \PYG{k}{by} \PYG{n}{dept\PYGZus{}name}\PYG{p}{),}
\PYG{n}{dept\PYGZus{}total\PYGZus{}avg}\PYG{p}{(}\PYG{n}{value}\PYG{p}{)} \PYG{k}{as}
\PYG{p}{(}\PYG{k}{select} \PYG{k}{avg}\PYG{p}{(}\PYG{n}{value}\PYG{p}{)}
\PYG{k}{from} \PYG{n}{dept\PYGZus{}total}\PYG{p}{)}
\PYG{k}{select} \PYG{n}{dept\PYGZus{}name}
\PYG{k}{from} \PYG{n}{dept\PYGZus{}total}\PYG{p}{,} \PYG{n}{dept\PYGZus{}total\PYGZus{}avg}
\PYG{k}{where} \PYG{n}{dept\PYGZus{}total}\PYG{p}{.}\PYG{n}{value} \PYG{o}{\PYGZgt{}} \PYG{n}{dept\PYGZus{}total\PYGZus{}avg}\PYG{p}{.}\PYG{n}{value}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} JOINS (used to combine rows from two or more tables based on the related columns)}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Add the extra branch}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{branch} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{4}\PYG{p}{,} \PYG{l+s+ss}{\PYGZdq{}Buffalo\PYGZdq{}}\PYG{p}{,} \PYG{k}{NULL}\PYG{p}{,} \PYG{k}{NULL}\PYG{p}{);}  \PYG{c+c1}{\PYGZhy{}\PYGZhy{} here I have used double quotes but strings can as well be represented with single quotes.}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find all branches and the names of their managers}
\PYG{k}{SELECT} \PYG{n}{employee}\PYG{p}{.}\PYG{n}{emp\PYGZus{}id}\PYG{p}{,} \PYG{n}{employee}\PYG{p}{.}\PYG{n}{first\PYGZus{}name}\PYG{p}{,} \PYG{n}{branch}\PYG{p}{.}\PYG{n}{branch\PYGZus{}name}
\PYG{k}{FROM} \PYG{n}{employee}
\PYG{k}{JOIN} \PYG{n}{branch}    \PYG{c+c1}{\PYGZhy{}\PYGZhy{} LEFT JOIN (when we use LEFT JOIN all the rows from the left table gets included as well, similarly for RIGHT JOIN), RIGHT JOIN  (we added buffalo just so that we can see difference in case of RIGHT JOIN)}
\PYG{k}{ON} \PYG{n}{employee}\PYG{p}{.}\PYG{n}{emp\PYGZus{}id} \PYG{o}{=} \PYG{n}{branch}\PYG{p}{.}\PYG{n}{mgr\PYGZus{}id}\PYG{p}{;}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} we can add a where clause beneath this like where branch.mgr\PYGZus{}start\PYGZus{}date \PYGZgt{} something}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Show ID, name, courses, and corresponding credits of each student.}
\PYG{k}{select} \PYG{n}{M}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{,} \PYG{n}{M}\PYG{p}{.}\PYG{n}{name}\PYG{p}{,} \PYG{k}{C}\PYG{p}{.}\PYG{n}{title}\PYG{p}{,} \PYG{k}{C}\PYG{p}{.}\PYG{n}{credits} \PYG{k}{from} \PYG{p}{(}\PYG{k}{select} \PYG{n}{S}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{,} \PYG{n}{S}\PYG{p}{.}\PYG{n}{name}\PYG{p}{,} \PYG{n}{T}\PYG{p}{.}\PYG{n}{course\PYGZus{}id} \PYG{k}{from} \PYG{n}{student} \PYG{k}{as} \PYG{n}{S} \PYG{k}{join} \PYG{n}{takes} \PYG{k}{as} \PYG{n}{T} \PYG{k}{on} \PYG{n}{S}\PYG{p}{.}\PYG{n}{ID} \PYG{o}{=} \PYG{n}{T}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{)} \PYG{k}{as} \PYG{n}{M} \PYG{k}{join} \PYG{n}{course} \PYG{k}{as} \PYG{k}{C} \PYG{k}{on} \PYG{n}{M}\PYG{p}{.}\PYG{n}{course\PYGZus{}id} \PYG{o}{=} \PYG{k}{C}\PYG{p}{.}\PYG{n}{course\PYGZus{}id}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} nested queries}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find names of all employees who have sold over 50,000}
\PYG{k}{SELECT} \PYG{n}{employee}\PYG{p}{.}\PYG{n}{first\PYGZus{}name}\PYG{p}{,} \PYG{n}{employee}\PYG{p}{.}\PYG{n}{last\PYGZus{}name}
\PYG{k}{FROM} \PYG{n}{employee}
\PYG{k}{WHERE} \PYG{n}{employee}\PYG{p}{.}\PYG{n}{emp\PYGZus{}id} \PYG{k}{IN} \PYG{p}{(}\PYG{k}{SELECT} \PYG{n}{works\PYGZus{}with}\PYG{p}{.}\PYG{n}{emp\PYGZus{}id}  \PYG{c+c1}{\PYGZhy{}\PYGZhy{} note that first sql will execute the part which is inside \PYGZdq{}()\PYGZdq{}}
                          \PYG{k}{FROM} \PYG{n}{works\PYGZus{}with}
                          \PYG{k}{WHERE} \PYG{n}{works\PYGZus{}with}\PYG{p}{.}\PYG{n}{total\PYGZus{}sales} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{50000}\PYG{p}{);}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find all clients who are handled by the branch that Michael Scott manages}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Assume you know Michael\PYGZsq{}s ID}
\PYG{k}{SELECT} \PYG{n}{client}\PYG{p}{.}\PYG{n}{client\PYGZus{}id}\PYG{p}{,} \PYG{n}{client}\PYG{p}{.}\PYG{n}{client\PYGZus{}name}
\PYG{k}{FROM} \PYG{n}{client}
\PYG{k}{WHERE} \PYG{n}{client}\PYG{p}{.}\PYG{n}{branch\PYGZus{}id} \PYG{o}{=} \PYG{p}{(}\PYG{k}{SELECT} \PYG{n}{branch}\PYG{p}{.}\PYG{n}{branch\PYGZus{}id}
                          \PYG{k}{FROM} \PYG{n}{branch}
                          \PYG{k}{WHERE} \PYG{n}{branch}\PYG{p}{.}\PYG{n}{mgr\PYGZus{}id} \PYG{o}{=} \PYG{l+m+mi}{102}\PYG{p}{);}

 \PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find all clients who are handles by the branch that Michael Scott manages}
 \PYG{c+c1}{\PYGZhy{}\PYGZhy{} Assume you DONT\PYGZsq{}T know Michael\PYGZsq{}s ID}
 \PYG{k}{SELECT} \PYG{n}{client}\PYG{p}{.}\PYG{n}{client\PYGZus{}id}\PYG{p}{,} \PYG{n}{client}\PYG{p}{.}\PYG{n}{client\PYGZus{}name}
 \PYG{k}{FROM} \PYG{n}{client}
 \PYG{k}{WHERE} \PYG{n}{client}\PYG{p}{.}\PYG{n}{branch\PYGZus{}id} \PYG{o}{=} \PYG{p}{(}\PYG{k}{SELECT} \PYG{n}{branch}\PYG{p}{.}\PYG{n}{branch\PYGZus{}id}
                           \PYG{k}{FROM} \PYG{n}{branch}
                           \PYG{k}{WHERE} \PYG{n}{branch}\PYG{p}{.}\PYG{n}{mgr\PYGZus{}id} \PYG{o}{=} \PYG{p}{(}\PYG{k}{SELECT} \PYG{n}{employee}\PYG{p}{.}\PYG{n}{emp\PYGZus{}id}
                                                  \PYG{k}{FROM} \PYG{n}{employee}
                                                  \PYG{k}{WHERE} \PYG{n}{employee}\PYG{p}{.}\PYG{n}{first\PYGZus{}name} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}Michael\PYGZsq{}} \PYG{k}{AND} \PYG{n}{employee}\PYG{p}{.}\PYG{n}{last\PYGZus{}name} \PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}Scott\PYGZsq{}}
                                                  \PYG{k}{LIMIT} \PYG{l+m+mi}{1}\PYG{p}{));}


\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find the names of employees who work with clients handled by the scranton branch}
\PYG{k}{SELECT} \PYG{n}{employee}\PYG{p}{.}\PYG{n}{first\PYGZus{}name}\PYG{p}{,} \PYG{n}{employee}\PYG{p}{.}\PYG{n}{last\PYGZus{}name}
\PYG{k}{FROM} \PYG{n}{employee}
\PYG{k}{WHERE} \PYG{n}{employee}\PYG{p}{.}\PYG{n}{emp\PYGZus{}id} \PYG{k}{IN} \PYG{p}{(}
                         \PYG{k}{SELECT} \PYG{n}{works\PYGZus{}with}\PYG{p}{.}\PYG{n}{emp\PYGZus{}id}
                         \PYG{k}{FROM} \PYG{n}{works\PYGZus{}with}
                         \PYG{p}{)}
\PYG{k}{AND} \PYG{n}{employee}\PYG{p}{.}\PYG{n}{branch\PYGZus{}id} \PYG{o}{=} \PYG{l+m+mi}{2}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Find the names of all clients who have spent more than 100,000 dollars}
\PYG{k}{SELECT} \PYG{n}{client}\PYG{p}{.}\PYG{n}{client\PYGZus{}name}
\PYG{k}{FROM} \PYG{n}{client}
\PYG{k}{WHERE} \PYG{n}{client}\PYG{p}{.}\PYG{n}{client\PYGZus{}id} \PYG{k}{IN} \PYG{p}{(}
                          \PYG{k}{SELECT} \PYG{n}{client\PYGZus{}id}
                          \PYG{k}{FROM} \PYG{p}{(}
                                \PYG{k}{SELECT} \PYG{k}{SUM}\PYG{p}{(}\PYG{n}{works\PYGZus{}with}\PYG{p}{.}\PYG{n}{total\PYGZus{}sales}\PYG{p}{)} \PYG{k}{AS} \PYG{n}{totals}\PYG{p}{,} \PYG{n}{client\PYGZus{}id}
                                \PYG{k}{FROM} \PYG{n}{works\PYGZus{}with}
                                \PYG{k}{GROUP} \PYG{k}{BY} \PYG{n}{client\PYGZus{}id}\PYG{p}{)} \PYG{k}{AS} \PYG{n}{total\PYGZus{}client\PYGZus{}sales}
                          \PYG{k}{WHERE} \PYG{n}{totals} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{100000}
\PYG{p}{);}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Correct the tot\PYGZus{}credit attributes for each tuple in student table such that total credit is}
\PYG{n}{equal} \PYG{k}{to} \PYG{n}{the} \PYG{n}{credit} \PYG{k}{of} \PYG{n}{courses} \PYG{n}{successfully} \PYG{n}{completed} \PYG{k}{by} \PYG{n}{the} \PYG{n}{student}\PYG{p}{.} \PYG{n}{Here} \PYG{n}{successfully}
\PYG{n}{completed} \PYG{n}{means} \PYG{n}{student} \PYG{n}{has} \PYG{n}{a} \PYG{n}{grade} \PYG{n}{that} \PYG{k}{is} \PYG{k}{not} \PYG{err}{‘}\PYG{n}{F}\PYG{err}{’} \PYG{p}{.} \PYG{n}{Students} \PYG{n}{who} \PYG{n}{did} \PYG{k}{not} \PYG{n}{take} \PYG{k}{any}
\PYG{n}{courses}\PYG{p}{,} \PYG{n}{the} \PYG{k}{output} \PYG{k}{for} \PYG{n}{them} \PYG{n}{should} \PYG{k}{show} \PYG{n}{total} \PYG{n}{credit} \PYG{l+m+mi}{0}\PYG{p}{.}

\PYG{k}{update} \PYG{n}{student} \PYG{k}{as} \PYG{n}{ST}\PYG{p}{,} \PYG{p}{(}\PYG{k}{select} \PYG{n}{B}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{,} \PYG{n}{coalesce}\PYG{p}{(}\PYG{n}{B}\PYG{p}{.}\PYG{n}{crd}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{k}{as} \PYG{n}{cred} \PYG{k}{from} \PYG{p}{(}\PYG{k}{select} \PYG{n}{J}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{,} \PYG{k}{sum}\PYG{p}{(}\PYG{k}{C}\PYG{p}{.}\PYG{n}{credits}\PYG{p}{)} \PYG{k}{as} \PYG{n}{crd} \PYG{k}{from} \PYG{p}{(}\PYG{k}{select} \PYG{n}{N}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{,} \PYG{n}{N}\PYG{p}{.}\PYG{n}{grd}\PYG{p}{,} \PYG{n}{N}\PYG{p}{.}\PYG{n}{course\PYGZus{}id} \PYG{k}{from} \PYG{p}{(}\PYG{k}{select} \PYG{n}{M}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{,} \PYG{n}{coalesce}\PYG{p}{(}\PYG{n}{M}\PYG{p}{.}\PYG{n}{grade}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}N\PYGZsq{}}\PYG{p}{)} \PYG{k}{as} \PYG{n}{grd}\PYG{p}{,} \PYG{n}{M}\PYG{p}{.}\PYG{n}{course\PYGZus{}id} \PYG{k}{from} \PYG{p}{(}\PYG{k}{select} \PYG{n}{S}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{,} \PYG{n}{S}\PYG{p}{.}\PYG{n}{name}\PYG{p}{,} \PYG{n}{T}\PYG{p}{.}\PYG{n}{course\PYGZus{}id}\PYG{p}{,} \PYG{n}{T}\PYG{p}{.}\PYG{n}{grade} \PYG{k}{from} \PYG{n}{student} \PYG{k}{as} \PYG{n}{S} \PYG{k}{left} \PYG{k}{join} \PYG{n}{takes} \PYG{k}{as} \PYG{n}{T} \PYG{k}{on} \PYG{n}{S}\PYG{p}{.}\PYG{n}{ID} \PYG{o}{=} \PYG{n}{T}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{)} \PYG{k}{as} \PYG{n}{M}\PYG{p}{)} \PYG{k}{as} \PYG{n}{N}\PYG{p}{)} \PYG{k}{as} \PYG{n}{J} \PYG{k}{left} \PYG{k}{join} \PYG{n}{course} \PYG{k}{as} \PYG{k}{C} \PYG{k}{on} \PYG{n}{J}\PYG{p}{.}\PYG{n}{course\PYGZus{}id} \PYG{o}{=} \PYG{k}{C}\PYG{p}{.}\PYG{n}{course\PYGZus{}id} \PYG{k}{where} \PYG{n}{J}\PYG{p}{.}\PYG{n}{grd} \PYG{o}{\PYGZlt{}\PYGZgt{}} \PYG{l+s+s1}{\PYGZsq{}F\PYGZsq{}} \PYG{k}{group} \PYG{k}{by} \PYG{n}{J}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{)} \PYG{k}{as} \PYG{n}{B}\PYG{p}{)} \PYG{k}{as} \PYG{n}{TEMP} \PYG{k}{set} \PYG{n}{tot\PYGZus{}cred} \PYG{o}{=} \PYG{n}{TEMP}\PYG{p}{.}\PYG{n}{cred} \PYG{k}{where} \PYG{n}{ST}\PYG{p}{.}\PYG{n}{ID} \PYG{o}{=} \PYG{n}{TEMP}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Maybe it could have been done like this}

\PYG{k}{update} \PYG{n}{student} \PYG{n}{S}
\PYG{k}{set} \PYG{n}{tot\PYGZus{}cred} \PYG{o}{=} \PYG{p}{(}\PYG{k}{select} \PYG{k}{sum}\PYG{p}{(}\PYG{n}{credits}\PYG{p}{)}
\PYG{k}{from} \PYG{n}{takes}\PYG{p}{,} \PYG{n}{course}
\PYG{k}{where} \PYG{n}{takes}\PYG{p}{.}\PYG{n}{course\PYGZus{}id} \PYG{o}{=} \PYG{n}{course}\PYG{p}{.}\PYG{n}{course\PYGZus{}id} \PYG{k}{and}
\PYG{n}{S}\PYG{p}{.}\PYG{n}{ID}\PYG{o}{=} \PYG{n}{takes}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{.}\PYG{k}{and}
\PYG{n}{takes}\PYG{p}{.}\PYG{n}{grade} \PYG{o}{\PYGZlt{}\PYGZgt{}} \PYG{err}{’}\PYG{n}{F}\PYG{err}{’} \PYG{k}{and}
\PYG{n}{takes}\PYG{p}{.}\PYG{n}{grade} \PYG{k}{is} \PYG{k}{not} \PYG{k}{null}\PYG{p}{);}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Sets tot\PYGZus{}creds to null for students who have not taken any course}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Instead of sum(credits), use:}
\PYG{k}{case}
\PYG{k}{when} \PYG{k}{sum}\PYG{p}{(}\PYG{n}{credits}\PYG{p}{)} \PYG{k}{is} \PYG{k}{not} \PYG{k}{null} \PYG{k}{then} \PYG{k}{sum}\PYG{p}{(}\PYG{n}{credits}\PYG{p}{)}
\PYG{k}{else} \PYG{l+m+mi}{0}
\PYG{k}{end}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} deleting entries in the table when they have foreign keys associated to them}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} ON DELETE NULL means that say if we delete Michael Scott then second entry in the branch table will get mgr\PYGZus{}id set to NULL whereas in ON DELETE CASCADE the entire row will get deleted in branch table. Use ON DELETE CASCADE when that foreign key is very important like say it forms a primary key.}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Views}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Create view of students who are studying in a department with budget more than 80000}

\PYG{k}{create} \PYG{k}{view} \PYG{n}{stud\PYGZus{}dept\PYGZus{}budg} \PYG{k}{as} \PYG{k}{select} \PYG{n}{S}\PYG{p}{.}\PYG{n}{ID}\PYG{p}{,} \PYG{n}{S}\PYG{p}{.}\PYG{n}{name}\PYG{p}{,} \PYG{n}{S}\PYG{p}{.}\PYG{n}{dept\PYGZus{}name}\PYG{p}{,} \PYG{n}{D}\PYG{p}{.}\PYG{n}{budget} \PYG{k}{from} \PYG{n}{student} \PYG{k}{as} \PYG{n}{S} \PYG{k}{join} \PYG{n}{department} \PYG{k}{as} \PYG{n}{D} \PYG{k}{on} \PYG{n}{S}\PYG{p}{.}\PYG{n}{dept\PYGZus{}name} \PYG{o}{=} \PYG{n}{D}\PYG{p}{.}\PYG{n}{dept\PYGZus{}name} \PYG{k}{where} \PYG{n}{D}\PYG{p}{.}\PYG{n}{budget} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{80000}\PYG{p}{;}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Now if we delete (or dec budget) some department with budget \PYGZgt{} 80000. and then do select * from stud\PYGZus{}dept\PYGZus{}budg; it wont show name corresponding to that department.}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} CREATE}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{}     TRIGGER `event\PYGZus{}name` BEFORE/AFTER INSERT/UPDATE/DELETE}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{}     ON `database`.`table`}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{}     FOR EACH ROW BEGIN}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} 		\PYGZhy{}\PYGZhy{} trigger body}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} 		\PYGZhy{}\PYGZhy{} this code is applied to every}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} 		\PYGZhy{}\PYGZhy{} inserted/updated/deleted row}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{}     END;}

\PYG{k}{CREATE} \PYG{k}{TABLE} \PYG{n}{trigger\PYGZus{}test} \PYG{p}{(}
     \PYG{n}{message} \PYG{n+nb}{VARCHAR}\PYG{p}{(}\PYG{l+m+mi}{100}\PYG{p}{)}
\PYG{p}{);}


\PYG{k}{DELIMITER} \PYG{err}{\PYGZdl{}\PYGZdl{}}  \PYG{c+c1}{\PYGZhy{}\PYGZhy{} changing delimiter from semicolon to \PYGZdl{}\PYGZdl{} as we will be using semicolon inside and we don\PYGZsq{}t want sql to think that when we put semicolon we are done with our trigger}
\PYG{k}{CREATE}
    \PYG{k}{TRIGGER} \PYG{n}{my\PYGZus{}trigger} \PYG{k}{BEFORE} \PYG{k}{INSERT}
    \PYG{k}{ON} \PYG{n}{employee}
    \PYG{k}{FOR} \PYG{k}{EACH} \PYG{k}{ROW} \PYG{k}{BEGIN}  \PYG{c+c1}{\PYGZhy{}\PYGZhy{} for each new item that is inserted}
        \PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{trigger\PYGZus{}test} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}added new employee\PYGZsq{}}\PYG{p}{);}
    \PYG{k}{END}\PYG{err}{\PYGZdl{}\PYGZdl{}}
\PYG{k}{DELIMITER} \PYG{p}{;}  \PYG{c+c1}{\PYGZhy{}\PYGZhy{} changing delimiter back to semi colon.}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{employee}
\PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{109}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Oscar\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Martinez\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}1968\PYGZhy{}02\PYGZhy{}19\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}M\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{69000}\PYG{p}{,} \PYG{l+m+mi}{106}\PYG{p}{,} \PYG{l+m+mi}{3}\PYG{p}{);}


\PYG{k}{DELIMITER} \PYG{err}{\PYGZdl{}\PYGZdl{}}
\PYG{k}{CREATE}
    \PYG{k}{TRIGGER} \PYG{n}{my\PYGZus{}trigger} \PYG{k}{BEFORE} \PYG{k}{INSERT}
    \PYG{k}{ON} \PYG{n}{employee}
    \PYG{k}{FOR} \PYG{k}{EACH} \PYG{k}{ROW} \PYG{k}{BEGIN}
        \PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{trigger\PYGZus{}test} \PYG{k}{VALUES}\PYG{p}{(}\PYG{k}{NEW}\PYG{p}{.}\PYG{n}{first\PYGZus{}name}\PYG{p}{);}
    \PYG{k}{END}\PYG{err}{\PYGZdl{}\PYGZdl{}}
\PYG{k}{DELIMITER} \PYG{p}{;}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{employee}
\PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{110}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Kevin\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Malone\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}1978\PYGZhy{}02\PYGZhy{}19\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}M\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{69000}\PYG{p}{,} \PYG{l+m+mi}{106}\PYG{p}{,} \PYG{l+m+mi}{3}\PYG{p}{);}

\PYG{k}{DELIMITER} \PYG{err}{\PYGZdl{}\PYGZdl{}}
\PYG{k}{CREATE}
    \PYG{k}{TRIGGER} \PYG{n}{my\PYGZus{}trigger} \PYG{k}{BEFORE} \PYG{k}{INSERT}
    \PYG{k}{ON} \PYG{n}{employee}
    \PYG{k}{FOR} \PYG{k}{EACH} \PYG{k}{ROW} \PYG{k}{BEGIN}
         \PYG{k}{IF} \PYG{k}{NEW}\PYG{p}{.}\PYG{n}{sex} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}M\PYGZsq{}} \PYG{k}{THEN}
               \PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{trigger\PYGZus{}test} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}added male employee\PYGZsq{}}\PYG{p}{);}
         \PYG{n}{ELSEIF} \PYG{k}{NEW}\PYG{p}{.}\PYG{n}{sex} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}F\PYGZsq{}} \PYG{k}{THEN}
               \PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{trigger\PYGZus{}test} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}added female\PYGZsq{}}\PYG{p}{);}
         \PYG{k}{ELSE}
               \PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{trigger\PYGZus{}test} \PYG{k}{VALUES}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}added other employee\PYGZsq{}}\PYG{p}{);}
         \PYG{k}{END} \PYG{k}{IF}\PYG{p}{;}
    \PYG{k}{END}\PYG{err}{\PYGZdl{}\PYGZdl{}}
\PYG{k}{DELIMITER} \PYG{p}{;}
\PYG{k}{INSERT} \PYG{k}{INTO} \PYG{n}{employee}
\PYG{k}{VALUES}\PYG{p}{(}\PYG{l+m+mi}{111}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Pam\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Beesly\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}1988\PYGZhy{}02\PYGZhy{}19\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}F\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{69000}\PYG{p}{,} \PYG{l+m+mi}{106}\PYG{p}{,} \PYG{l+m+mi}{3}\PYG{p}{);}


\PYG{k}{DROP} \PYG{k}{TRIGGER} \PYG{n}{my\PYGZus{}trigger}\PYG{p}{;}
\end{Verbatim}
